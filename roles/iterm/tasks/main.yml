---
# iTerm will create some of these on first run, but we specify all here
# for completeness.
- name: iterm | make directories
  file: path="{{ item }}" state=directory
  loop:
    - "~/Library/Application Support/iTerm2"
    - "~/Library/Application Support/iTerm2/DynamicProfiles"
    - "~/Library/Application Support/iTerm2/Sources"

- name: iterm | link Dynamic Profiles
  file: state=link src="{{ item }}" dest="~/Library/Application Support/iTerm2/DynamicProfiles/{{ item | basename }}"
  loop: '{{ lookup("fileglob", "roles/iterm/files/DynamicProfiles/*.json", wantlist=True) }}'

- name: iterm | link Sources
  file: state=link src="{{ item }}" dest="~/Library/Application Support/iTerm2/Sources/{{ item | basename }}"
  loop: '{{ lookup("fileglob", "roles/iterm/files/Sources/*.json", wantlist=True) }}'

- name: iterm | check switchable symbolic links
  stat: path="~/Library/Application Support/iTerm2/DynamicProfiles/{{ item.dest }}"
  loop: '{{ iterm_dynamic_profiles.retina }}'
  register: dynamic_profiles_stat_info
  changed_when: false
  loop_control:
    label: '{{ item.dest }}'

- name: iterm | show dynamic_profiles_stat_info
  debug:
    var: dynamic_profiles_stat_info
    verbosity: 2

# We only link these ones if they don't already exist;
# once created, Hammerspoon manages the links.
- name: iterm | set up switchable symbolic links
  file:
    dest="~/Library/Application Support/iTerm2/DynamicProfiles/{{ item.dest }}"
    src="~/Library/Application Support/iTerm2/Sources/{{ item.src }}"
    state=link
  loop: '{{ iterm_dynamic_profiles.retina }}'
  loop_control:
    index_var: index
    label: '{{ item.dest }}@ -> {{ item.src }}'
  when: not dynamic_profiles_stat_info.results[index].stat.exists
