" Temporary workaround for MacVim blowing up for any Python plug-in.
if has('gui')
  let g:pathogen_blacklist=['YouCompleteMe', 'gundo', 'ultisnips']
endif

" Add .vim/bundle subdirs to runtime path.
source $HOME/.vim/bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

let mapleader="\<Space>"
let maplocalleader="\\"

" Extension -> filetype mappings.
let filetype_m='objc'
let filetype_pl='prolog'

" Automatic, language-dependent indentation, syntax coloring and other
" functionality.
filetype indent plugin on
syntax on

source $VIMRUNTIME/macros/matchit.vim

" Prevent tcomment from making a zillion mappings (we just want the operator).
let g:tcommentMapLeader1=''
let g:tcommentMapLeader2=''
let g:tcommentMapLeaderCommentAnyway=''
let g:tcommentTextObjectInlineComment=''

" The default (g<) is a bit awkward to type.
let g:tcommentMapLeaderUncommentAnyway='gu'

" Allow for per-machine overrides in ~/.vim/host/hostname and
" ~/.vim/vimrc.local.
let s:hostfile = $HOME . '/.vim/host/' . substitute(hostname(), "\\..*", '', '')
if filereadable(s:hostfile)
  execute 'source ' . s:hostfile
endif

" Inglorious hack to share config across dev* machines.
if matchstr(hostname(), '\v^dev\d+\.') != ''
  execute 'source ' . $HOME . '/.vim/host/dev-star'
endif

let s:vimrc_local = $HOME . '/.vim/vimrc.local'
if filereadable(s:vimrc_local)
  execute 'source ' . s:vimrc_local
endif

" After this file is sourced, plug-in code will be evaluated.
" See ~/.vim/after for files evaluated after that.
" See `:scriptnames` for a list of all scripts, in evaluation order.
" Launch Vim with `vim --startuptime vim.log` for profiling info.
"
" To see all leader mappings, including those from plug-ins:
"
"   vim -c 'set t_te=' -c 'set t_ti=' -c 'map <space>' -c q | sort
