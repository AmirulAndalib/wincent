---
- name: dotfiles | make ~/.config
  file: path=~/.config state=directory

- name: dotfiles | make ~/.config/karabiner
  file: path=~/.config/karabiner state=directory

- name: dotfiles | symlink nvim to vim
  file: path=~/.config/nvim src=~/.vim state=link force=yes

- name: dotfiles | create backup directory
  file: path=~/.backups state=directory

- name: dotfiles | check for non-symlink originals
  stat: path="~/{{ item }}"
  register: original_check
  loop: '{{dotfile_files + dotfile_templates}}'
  changed_when: original_check.stat.exists and not original_check.stat.islnk

- name: dotfiles | show original_check
  debug:
    var: original_check
    verbosity: 2

- name: dotfiles | backup originals
  command:
    mv ~/{{ item.0 }} ~/.backups/
    creates=~/.backups/{{ item.0 }}
    removes=~/{{ item.0 }}
  loop:
    '{{ (dotfile_files + dotfile_templates) | zip(original_check.results) | list }}'
  when: item.1.stat.exists and not item.1.stat.islnk
  loop_control:
    label: '{{item.0}}'

- name: dotfiles | create symlinks
  file: src={{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}
        path=~/{{ item }}
        state=link
        force=yes
  loop: '{{dotfile_files}}'

- name: dotfiles | test Karabiner generator
  command: '{{ ansible_env.PWD }}/roles/dotfiles/support/karabiner-test.js'

- name: dotfiles | prepare Karabiner config
  command: '{{ ansible_env.PWD }}/roles/dotfiles/support/karabiner.js'
  register: karabiner_config
  check_mode: no

- name: dotfiles | show karabiner_config
  debug:
    var: karabiner_config
    verbosity: 2

# Note some nasty dependencies here between creating the symlinks (eg.
# effectively creating ~/mutt/config/) and then templating into it (eg.
# ~/.mutt/config/settings.mutt).
- name: dotfiles | create templates
  template: dest={{ ansible_env.HOME }}/{{ item }}
            mode={{ '0755' if item.endswith('.sh') else '0644' }}
            src={{ item }}
  loop: '{{dotfile_templates}}'

# Provide an extension point for other roles to dump .zshenv stuff into.
- name: dotfiles | make ~/.zshenv.d
  file: path=~/.zshenv.d state=directory

# Override insanely low open file limits on macOS.
- name: dotfiles | copy maxfiles.zsh
  copy: dest=~/.zshenv.d/maxfiles.zsh src=maxfiles.zsh
  when: ansible_os_family == "Darwin"

# Make some directories required by configuration in the dotfiles; these should
# probably be separate roles.
- name: dotfiles | create auxiliary directories
  file: path={{ item }} state=directory
  loop:
    # mbsync will die on first sync without this:
    - ~/.mail
