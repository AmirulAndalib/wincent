# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguidehttps://i3wm.org/docs/userguide.html.html for a complete reference!

# As explained in ~/.config/sxhkd/sxhkdrc, Mod1 here (technically "Alt") is
# "Super". Mod4 (technically "Super") would be "Alt".
set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Code Pro Light 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+s exec "dmenu_run -l 10"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# Change focus using Vim-style directional keys (h, j, k, l)...
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
# TODO: find an alternative for this...
# bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+t fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+r layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+f layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: terminal"
set $ws2 "2: browser"
set $ws3 "3: slack"
set $ws4 "4: filemanager"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
# TODO: consider using icons here

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+p restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+f exec "test $(echo -e 'No\nYes' | dmenu -i -p 'Exit i3?') = 'Yes' && i3-msg exit"

#
# Resizing
#
# Arrow keys attempt to grow in a specific direction, and if that doesn't work,
# "pull" the other edge of the window in the same direction.
#
# When you have two windows (a common case), this means the behavior
# feels very much like tmux's resize behavior.

bindsym $mod+Left exec --no-startup-id "i3-msg 'resize grow left 10 px or 10 ppt' || i3-msg 'resize shrink right 10 px or 10 ppt'"
bindsym $mod+Down exec --no-startup-id "i3-msg 'resize grow down 10 px or 10 ppt' || i3-msg 'resize shrink up 10 px or 10 ppt'"
bindsym $mod+Right exec --no-startup-id "i3-msg 'resize grow right 10 px or 10 ppt' || i3-msg 'resize shrink left 10 px or 10 ppt'"
bindsym $mod+Up exec --no-startup-id "i3-msg 'resize grow up 10 px or 10 ppt' || i3-msg 'resize shrink down 10 px or 10 ppt'"

# The "Shift" variants allow you to "pull" directly. This is useful if you have,
# say, three windows and the middle one has focus: in this scenario, the
# movement keys above will try to grow first (ie. "Left" tries to grow to the
# left), but if you instead want to shrink, you would push the shifted version
# (which would shrink by pulling the right edge leftwards).
bindsym $mod+Shift+Left resize shrink right 10 px or 10 ppt
bindsym $mod+Shift+Down resize shrink up 10 px or 10 ppt
bindsym $mod+Shift+Right resize shrink left 10 px or 10 ppt
bindsym $mod+Shift+Up resize shrink down 10 px or 10 ppt

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        colors {
                background #00000080
        }
        i3bar_command i3bar --transparency
        mode hide # show when holding down $mod only
        position top
        status_command i3blocks
}

# https://github.com/Airblader/i3#gaps
#for_window [class=".*"] border pixel 0

default_border pixel 0
focus_follows_mouse no

# Gaps between containers
gaps inner 10

# Gaps between containers and screen edge
gaps outer 0

# Only show outer gaps when only one container on screen
# (outer gap will be inner + outer, ie. 10)
smart_gaps inverse_outer

# Again, not sure if I want this...
assign [class="^Google-chrome$"] number $ws2

exec sxhkd

exec kitty

# maybe won't keep this... just to show that i can do it.
exec --no-startup-id i3-msg 'workspace number $ws2; exec google-chrome-stable; workspace number $ws1'

# Stop Chrome file dialogs from being bigger then the entire screen...
floating_maximum_size 1920 x 1080
